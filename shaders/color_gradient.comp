//? #version 430

//? uniform int NumberOfComputationsX;
//? uniform int NumberOfComputationsY;
//? uniform int NumberOfComputationsZ;

uniform vec3 _color_begin;
uniform vec3 _color_end;

layout(std430, binding=0) buffer colors{
   float channels[];
};

void cool_main(){
    uint gid = gl_GlobalInvocationID.x;
    float t = gid / float(NumberOfComputationsX);
    vec3 col = mix(_color_begin, _color_end, t);
        
    channels[3 * gid + 0] = col.r;
    channels[3 * gid + 1] = col.g;
    channels[3 * gid + 2] = col.b;
}