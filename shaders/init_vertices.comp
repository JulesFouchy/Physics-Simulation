//? #version 430

uniform int _grid_width;
uniform int _grid_height;

struct Vertex {
   vec4 pos;
   vec2 uv;
   vec2 _padding;
};  

layout (std140, binding = 0) buffer VertexBuffer0 {
   Vertex vertices0[];
};

void cool_main(){
    int gid = int(gl_GlobalInvocationID.x);
    int x = gid / _grid_width;
    int y = gid % _grid_width;
    vertices0[gid].uv = vec2(
        x / float(_grid_width - 1),
        y / float(_grid_height - 1)
    );
}